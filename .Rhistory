install.packages("blogdown")
blogdown::install_hugo()
blogdown::new_site(theme="themefisher/liva-hugo", theme_example = T)
knitr::opts_chunk$set(collapse = TRUE)
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
cardio <- read_excel("~/desktop/cardio.xlsx")
cardio <- read_excel("~/desktop/cardio.xlsx")
cardio <- read_excel("~/desktop/cardio.xlsx")
library(readxl)
cardio <- read_excel("~/Desktop/cardio.xlsx")
View(cardio)
cardio <- read_excel("~/Desktop/cardio.xlsx")
cardio <- read_excel("~/Desktop/cardio.xlsx")
blogdown::new_site(theme="themefisher/liva-hugo", theme_example = T)
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyr)
library(tidyverse)
COD_Canc <- COD %>% select(-HHS.Region) %>% filter(Age.Range == "0-49", Locality == "All", Benchmark == "Floating", Cause.of.Death == "Cancer")
diabetes <- read.csv("~/Desktop/website/content/blog/Diabetes.csv")
COD <- read.csv("~/Desktop/website/content/blog/ExcessDeaths.csv")
library(ggplot2)
library(tidyr)
library(tidyverse)
diabetes <- read.csv("~/Desktop/website/content/blog/Diabetes.csv")
COD <- read.csv("~/Desktop/website/content/blog/ExcessDeaths.csv")
COD_Canc <- COD %>% select(-HHS.Region) %>% filter(Age.Range == "0-49", Locality == "All", Benchmark == "Floating", Cause.of.Death == "Cancer")
COD_HD <- COD %>% select(-HHS.Region) %>% filter(Age.Range == "0-49", Locality == "All", Benchmark == "Floating", Cause.of.Death == "Heart Disease")
COD_St <- COD %>% select(-HHS.Region) %>% filter(Age.Range == "0-49", Locality == "All", Benchmark == "Floating", Cause.of.Death == "Stroke")
diabetes <- diabetes %>% select(-YearEnd,-DataSource,-Topic, -Response, -DataValueFootnoteSymbol, -LowConfidenceLimit, -HighConfidenceLimit, -StratificationCategory1, -Stratification1, -StratificationCategory2, -Stratification2, -StratificationCategory3, -Stratification3, -GeoLocation, -ResponseID, -LocationID, -TopicID, -QuestionID)
diabetes <- diabetes %>% select(-DataValueAlt, -DatavalueFootnote, -DataValueTypeID, -StratificationCategoryID1, -StratificationID1, -StratificationCategoryID2, -StratificationID2, -StratificationCategoryID3, -StratificationID3)
diabetes <- diabetes %>% select(-DataValueUnit)
diabetes1 <- diabetes %>% select(LocationDesc, Question, DataValue)
#diabetes1 %>% pivot_wider(names_from = Question, values_from = DataValue)
diabetes1 <- diabetes1 %>% reshape(idvar = "LocationDesc", timevar = "Question", direction = "wide")
diabetes2 <- diabetes1 %>% select(-`DataValue.Dilated eye examination among adults aged >= 18 years with diagnosed diabetes`, -`DataValue.Foot examination among adults aged >= 18 years with diagnosed diabetes`, -`DataValue.Influenza vaccination among noninstitutionalized adults aged 18-64 years with diagnosed diabetes`, -`DataValue.Influenza vaccination among noninstitutionalized adults aged >= 65 years with diagnosed diabetes`, -`DataValue.Pneumococcal vaccination among noninstitutionalized adults aged >= 65 years with diagnosed diabetes`, -`DataValue.Influenza vaccination among noninstitutionalized adults aged 18-64 years with diagnosed diabetes`, -`DataValue.Pneumococcal vaccination among noninstitutionalized adults aged 18-64 years with diagnosed diabetes`)
diabetes3 <- diabetes2 %>% rename(DiabetesDiagnosed = `DataValue.Prevalence of diagnosed diabetes among adults aged >= 18 years`, DD_SMC = `DataValue.Adults with diagnosed diabetes aged >= 18 years who have taken a diabetes self-management course`, DD_HighBP = `DataValue.Prevalence of high blood pressure among adults aged >= 18 years with diagnosed diabetes`, DD_Depressive = `DataValue.Prevalence of depressive disorders among adults aged >= 18 years with diagnosed diabetes`, DD_HighChol = `DataValue.Prevalence of high cholesterol among adults aged >= 18 years with diagnosed diabetes`, DD_Women = `DataValue.Diabetes prevalence among women aged 18-44 years`, DD_GHb = `DataValue.Glycosylated hemoglobin measurement among adults aged >= 18 years with diagnosed diabetes`, State = `LocationDesc`)
glimpse(diabetes3)
[Link to Project I](/Project1)
blogdown::serve_site()
blogdown::serve_site()
R.version()
R --version
blogdown::serve_site()
---
title: "Project2"
author: "Bailee Wallis"
date: "11/22/2019"
output: html_document
type: post
---
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
---
title: About Me
description: this is meta description
draft: false
image: "images/author.png"
type: about
date: 2019-10-29T13:49:23+06:00
---
blogdown::serve_site()
blogdown::serve_site()
View(COD_HD)
american= "Mr. and Mrs. Dursley, of number four, Privet Drive, were proud to say that they were perfectly normal, thank you very much. They were the last people you'd expect to be involved in anything strange or mysterious, because they just didn't hold with such nonsense. Mr. Dursley was the director of a firm called Grunnings, which made drills. He was a big, beefy man with hardly any neck, although he did have a very large mustache. Mrs. Dursley was thin and blonde and had nearly twice the usual amount of neck, which came in very useful as she spent so much of her time craning over garden fences, spying on the neighbors. The Dursleys had a small son called Dudley and in their opinion there was no finer boy anywhere."
View(COD)
lexi <- read.csv("~/Desktop/website/lexi.csv")
View(lexi)
lexi <- read.csv("~/Desktop/website/lexi.csv", header=FALSE)
View(lexi)
knitr::opts_chunk$set(echo = TRUE)
lexi %>% mutate(word = V1)
lexi %>% rename(word = V1)
lexi %>% rename(word = V1) %>% rename(conn = V2)
lexi1 <- lexi %>% rename(word = V1) %>% rename(conn = V2)
lexi1 <- lexi %>% rename(word = V1) %>% rename(conn = V2) %>% glimpse()
lexi1 %>% separate(word, into = c("word", "type"), sep = "_")
lexi2 <- lexi1 %>% separate(word, into = c("word", "type"), sep = "_")
lexi2 <- lexi1 %>% separate(word, into = c("word", "type"), sep = "_") %>% glimpse()
lexi2 <- lexi1 %>% separate(word, into = c("word", "type"), sep = "_") %>% glimpse() %>% mutate_if(is.character, as.factor
lexi2 <- lexi1 %>% separate(word, into = c("word", "type"), sep = "_") %>% glimpse() %>% mutate_if(is.character, as.factor)
lexi2 <- lexi1 %>% separate(word, into = c("word", "type"), sep = "_") %>% mutate_if(is.character, as.factor)
lexi2 <- lexi1 %>% separate(word, into = c("word", "type"), sep = "_") %>% mutate_if(is.character, as.factor) %>% glimpse()
library(reticulate)
shabop <- “Our story beings on a Sunday afternoon Just between Halfway Tree and Spanish Town Where a young boy, not yet the cock of the walk He would soon become, was lying on the grass And taking in the sweet and sensuous scent of Hibiscus That languidly lilted along the summer breeze It was at this precise moment that he saw her Her walk was soft and delicate With a thaumaturgical touch that only a Rabbi's daughter could have Before their eyes had even met Her luminous lips had already lured him in Salvation winked with the promise of a Bris held at pinnacle And a congregation of sages bunny hopping and chicken dancing to Yiddish Mento Then their eyes linked, an eon blinked Amharic vows were screed upon their hearts Just to think, this could all be with the frenectomy and a few words of love My Shabop Shalom baby Won't you Shabop Shalom with me Under the old banana tree? My sweet Telavivian lambs bread My heart can act as an emollient And you'll never, ever say, "Get bent", no, no, oh Todamamatodamama Todamamatodamama, da, da, da, da Todamamatodamama Todamamatodamama, da, da, da, da All the signals that I'm sending I'll keep sending them and on the constanttillionth time I'll make you mine (Yes, I swear I will) Your sweet supple breasts are golden ghettos Soft statues in stilettos Two wise men instead of three When I'm in a foul mood I gotta' see you in your Talmud And so happy it makes me You wanna know who, who wrote the Book of Job? She wants to know Who, who wrote the Dead Sea Scrolls? Well, I did, I did Yes, yes, I did, I did I did, I did, I did, I did Hexakosioihexekontahexaphobia Can be a fun ordeal I swear by Solomon's seal Honey, when it comes to love There's a fire in the deep end of my heart Giving me the Heebie-Jeebies You see, I know the land of wood and waters Merely fodder for loves slaughter And darling, I've watched you cake-walk To the immaculate conception for far too long I'm livicated to you, yes Ahava Raba, Ahava Raba for you We're in Heaven, we're in Heaven, it's true I'm ascending, I'm ascending tonight with you”
shabop <- c(Our story beings on a Sunday afternoon Just between Halfway Tree and Spanish Town Where a young boy, not yet the cock of the walk He would soon become, was lying on the grass And taking in the sweet and sensuous scent of Hibiscus That languidly lilted along the summer breeze It was at this precise moment that he saw her Her walk was soft and delicate With a thaumaturgical touch that only a Rabbi's daughter could have Before their eyes had even met Her luminous lips had already lured him in Salvation winked with the promise of a Bris held at pinnacle And a congregation of sages bunny hopping and chicken dancing to Yiddish Mento Then their eyes linked, an eon blinked Amharic vows were screed upon their hearts Just to think, this could all be with the frenectomy and a few words of love My Shabop Shalom baby Won't you Shabop Shalom with me Under the old banana tree? My sweet Telavivian lambs bread My heart can act as an emollient And you'll never, ever say, "Get bent", no, no, oh Todamamatodamama Todamamatodamama, da, da, da, da Todamamatodamama Todamamatodamama, da, da, da, da All the signals that I'm sending I'll keep sending them and on the constanttillionth time I'll make you mine (Yes, I swear I will) Your sweet supple breasts are golden ghettos Soft statues in stilettos Two wise men instead of three When I'm in a foul mood I gotta' see you in your Talmud And so happy it makes me You wanna know who, who wrote the Book of Job? She wants to know Who, who wrote the Dead Sea Scrolls? Well, I did, I did Yes, yes, I did, I did I did, I did, I did, I did Hexakosioihexekontahexaphobia Can be a fun ordeal I swear by Solomon's seal Honey, when it comes to love There's a fire in the deep end of my heart Giving me the Heebie-Jeebies You see, I know the land of wood and waters Merely fodder for loves slaughter And darling, I've watched you cake-walk To the immaculate conception for far too long I'm livicated to you, yes Ahava Raba, Ahava Raba for you We're in Heaven, we're in Heaven, it's true I'm ascending, I'm ascending tonight with you)
shabop <- c("Our story beings on a Sunday afternoon Just between Halfway Tree and Spanish Town Where a young boy, not yet the cock of the walk He would soon become, was lying on the grass And taking in the sweet and sensuous scent of Hibiscus That languidly lilted along the summer breeze It was at this precise moment that he saw her Her walk was soft and delicate With a thaumaturgical touch that only a Rabbi's daughter could have Before their eyes had even met Her luminous lips had already lured him in Salvation winked with the promise of a Bris held at pinnacle And a congregation of sages bunny hopping and chicken dancing to Yiddish Mento Then their eyes linked, an eon blinked Amharic vows were screed upon their hearts Just to think, this could all be with the frenectomy and a few words of love My Shabop Shalom baby Won't you Shabop Shalom with me Under the old banana tree? My sweet Telavivian lambs bread My heart can act as an emollient And you'll never, ever say, "Get bent", no, no, oh Todamamatodamama Todamamatodamama, da, da, da, da Todamamatodamama Todamamatodamama, da, da, da, da All the signals that I'm sending I'll keep sending them and on the constanttillionth time I'll make you mine (Yes, I swear I will) Your sweet supple breasts are golden ghettos Soft statues in stilettos Two wise men instead of three When I'm in a foul mood I gotta' see you in your Talmud And so happy it makes me You wanna know who, who wrote the Book of Job? She wants to know Who, who wrote the Dead Sea Scrolls? Well, I did, I did Yes, yes, I did, I did I did, I did, I did, I did Hexakosioihexekontahexaphobia Can be a fun ordeal I swear by Solomon's seal Honey, when it comes to love There's a fire in the deep end of my heart Giving me the Heebie-Jeebies You see, I know the land of wood and waters Merely fodder for loves slaughter And darling, I've watched you cake-walk To the immaculate conception for far too long I'm livicated to you, yes Ahava Raba, Ahava Raba for you We're in Heaven, we're in Heaven, it's true I'm ascending, I'm ascending tonight with you")
shabop <- cbind("Our story beings on a Sunday afternoon Just between Halfway Tree and Spanish Town Where a young boy, not yet the cock of the walk He would soon become, was lying on the grass And taking in the sweet and sensuous scent of Hibiscus That languidly lilted along the summer breeze It was at this precise moment that he saw her Her walk was soft and delicate With a thaumaturgical touch that only a Rabbi's daughter could have Before their eyes had even met Her luminous lips had already lured him in Salvation winked with the promise of a Bris held at pinnacle And a congregation of sages bunny hopping and chicken dancing to Yiddish Mento Then their eyes linked, an eon blinked Amharic vows were screed upon their hearts Just to think, this could all be with the frenectomy and a few words of love My Shabop Shalom baby Won't you Shabop Shalom with me Under the old banana tree? My sweet Telavivian lambs bread My heart can act as an emollient And you'll never, ever say, "Get bent", no, no, oh Todamamatodamama Todamamatodamama, da, da, da, da Todamamatodamama Todamamatodamama, da, da, da, da All the signals that I'm sending I'll keep sending them and on the constanttillionth time I'll make you mine (Yes, I swear I will) Your sweet supple breasts are golden ghettos Soft statues in stilettos Two wise men instead of three When I'm in a foul mood I gotta' see you in your Talmud And so happy it makes me You wanna know who, who wrote the Book of Job? She wants to know Who, who wrote the Dead Sea Scrolls? Well, I did, I did Yes, yes, I did, I did I did, I did, I did, I did Hexakosioihexekontahexaphobia Can be a fun ordeal I swear by Solomon's seal Honey, when it comes to love There's a fire in the deep end of my heart Giving me the Heebie-Jeebies You see, I know the land of wood and waters Merely fodder for loves slaughter And darling, I've watched you cake-walk To the immaculate conception for far too long I'm livicated to you, yes Ahava Raba, Ahava Raba for you We're in Heaven, we're in Heaven, it's true I'm ascending, I'm ascending tonight with you")
readLines("shabop.txt")
getwd()
shabop <- read.csv2("~/Desktop/website/shabop.txt", sep="", comment.char="#")
View(shabop)
?readLines
readLines("shabop.txt")
shabop <- readLines("shabop.txt")
paste("shabop.txt")
paste(readLines("shabop.txt"), collapse = " ")
read.delim("shabop.txt")
read.delim(choose.file())
read.delim(file.choose())
readLines("shabop.txt")
readLines("/desktop/website/shabop.txt")
readLines("/desktop/website/shabop")
readLines(~"/desktop/website/shabop")
readLines(~"/desktop/website/shabop.txt")
readLines(~"/desktop/website/shabop.txt")
readLines(~"/shabop.txt")
readLines("shabop.txt")
read_lines("shabop.txt")
read_lines("shabop.txt")
read_lines("shabop.txt")
shabop <- read_lines("shabop.txt")
shabop
shabop <- read_lines("shabop.txt")
shabop
shabop %>% glimpse()
shabop <- paste(read_lines("shabop.txt"), collapse = " ")
shabop %>% glimpse()
shabop
library(dplyr)
library(tidyr)
libary(tidyverse)
library(tidyverse)
words = py$c
words
words = py$c
words
c
py$c
py$a
word = py$lower_list
word
word %>% as.data.frame()
word %>% as.data.frame() %>% rename(word = .)
word %>% as.data.frame() %>% rename(word = ".")
py$test %>% as.data.frame()
py$test
py$test %>% 1
py$test %>% [1]
py$test %>% as.array
py$test %>% [[1]]
py$test %>% as.list()
py$test %>% as.data.frame.complex()
py$test %>% as.data.frame.array()
py$test %>% as.data.frame.matrix()
py$test %>% as.data.frame()
py$test %>% as.data.frame() %>% pivot_longer(
cols = contains("appears"),
values_to = "appears",
values_drop_na = TRUE
)
py$test %>% as.data.frame() %>% pivot_longer(
cols = contains("appears"),
values_to = "appears",
values_drop_na = TRUE
) %>% pivot_longer(
cols = is.integer,
values_to = "times"
)
py$test %>% as.data.frame() %>% pivot_longer(
cols = contains("appears"),
values_to = "appears",
values_drop_na = TRUE
) %>% pivot_longer(
cols = is.integer(),
values_to = "times"
)
#cols = is.integer(),
#values_to = "times"
# )
py$test %>% as.data.frame() %>% pivot_longer(
cols = contains("appears"),
values_to = "appears",
values_drop_na = TRUE
) #%>% pivot_longer(
py$test
py$test %>% as.data.frame()
py$test %>% as.data.frame() %>% pivot_longer(values_to = "word")
py$test %>% as.data.frame() %>% pivot_longer(if.factor, values_to = "word")
py$test %>% as.data.frame()
py$test %>% as.data.frame() %>% pivot_longer(is.factor, values_to = "word")
py$test %>% as.data.frame() %>% pivot_longer(is.factor(), values_to = "word")
py$test %>% as.data.frame()
py$test %>% as.data.frame() %>% pivot_longer(cols = is.factor, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% pivot_longer(if(cols = is.factor , names_to = "titles", values_to = "word"))
py$test %>% as.data.frame() %>% pivot_longer(cols = is.factor = T, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% pivot_longer(cols = is.factor, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% pivot_longer(-is.integer(), names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% select(-is.interger) #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% select(-if.interger) #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% select(-is.integer()) #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% select(-is.integer) #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% filter(-is.integer) #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% filter(-is.integer) #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% filter(!is.integer) #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% filter(contains(integer)) #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% filter(contains(1)) #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% glimpse() #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame(col.names = "word", "times") %>% glimpse() #pivot_longer(-is.integer, names_to = "titles", values_to = "word")
py$test %>% as.data.frame() %>% select(20)
py$test %>% as.data.frame() %>% head(20)
py$test %>% as.data.frame() %>% mutate_if(is.factor, "word")
py$test %>% as.data.frame() %>% mutate_if(is.character, "word")
py$test %>% as.data.frame() %>% mutate_if(is.character)
py$test %>% as.data.frame()
py$test %>% as.data.frame() %>% pivot_longer(conains(1,2), names_to = "name", values_to = "values")
py$test %>% as.data.frame() %>% pivot_longer(contains(1,2), names_to = "name", values_to = "values")
py$test %>% as.data.frame() %>% pivot_longer(contains(c(1,2)), names_to = "name", values_to = "values")
py$test %>% as.data.frame() %>% pivot_longer(contains(c("1","2")), names_to = "name", values_to = "values")
py$test %>% as.data.frame() %>% pivot_longer(contains(c("x")), names_to = "name", values_to = "values")
py$test %>% as.data.frame() %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values")
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values")
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name) %>% mutate("\\d")
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name) %>% mutate(is.numeric)
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name) %>% mutate(is.numeric())
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name) %>% mutat(repl("^[[:digit:]]+L",x))
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name) %>% mutate(repl("^[[:digit:]]+L",x))
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name) %>% mutate(grepl("^[[:digit:]]+L",x))
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name) %>% mutate(grepl("^[[:digit:]]+L"))
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name) %>% mutate(grepl("^[[:digit:]]+L", values))
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name) %>% mutate(contains(1:100), T)
py$test %>% as.data.frame() %>% mutate_if(is.integer, as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name) %>% mutate(contains(1:100))
py$test %>% as.data.frame() #mutate_if(contains(), as.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% mutate_if(contains(digit), "amount")# %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% mutate_if(contains(numeric), "amount")# %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% mutate_if(is.integer, "amount")# %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% mutate(amount = is.integer)# %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% mutate(amount = if.integer)# %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% select_if(is_integer()) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% select_if(is_integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% select_if(is_integer) # %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% select_if(cols = is_integer) # %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% select_if(is.integer) # %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values") %>% select(-name)
py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "values")
py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times")
py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% select_all()
py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% glimpse
py$test %>% as.data.frame() %>% select_if(is.character())
py$test %>% as.data.frame() %>% select_if(is.character)
py$test %>% as.data.frame()
py$test %>% as.data.frame() %>% select_if(is.factor)
py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
py$test %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
py$test %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number()) %>% select(-name)
py$test %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number()) %>% select(-name)
shabop_t < py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number()) %>% select(-name)
shabop_t <- py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number()) %>% select(-name)
shabop_w <- py$test %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number()) %>% select(-name)
shabop_t %>% full_join(shabop_w)
shabop_w %>% full_join(shabop_t)
shabop_w %>% full_join(shabop_t) %>% select(word = "da")
shabop_w %>% full_join(shabop_t) %>% filter(word = "da")
shabop_w %>% full_join(shabop_t) %>% filter(word == "da")
shabop_w %>% full_join(shabop_t)
shabop_w %>% full_join(shabop_t) %>% sort()
shabop_w %>% full_join(shabop_t) %>% arrange()
shabop_w %>% full_join(shabop_t) %>% arrange(word)
shabop_t <- py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number()) %>% select(-name)
shabop_t
py$test %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times")
shabop_w <- py$test %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number()) %>% select(-name)
py$test %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number()) %>% select(-name)
py$test %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number()) %>% select(-name) %>% arrange(word)
py$myarray
py$myarray %>% as.data.frame()
py$myarray
py$m
py$m%>% as.data.frame()
py$m%>% as.data.frame.array()
py$myarray
py$list
py$list %>% as.data.frame()
py$myarray %>% as.data.frame()
py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times")
py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
py$list %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
shabop_w<- py$list %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
shabop_w %>% left_join(shabop_t) %>% arrange(word)
shabop_w %>% left_join(shabop_t) %>% arrange(word) %>% select(-name, -id)
shabop_w %>% left_join(shabop_t) %>% arrange(word) %>% select(-name, -id) %>% filter(word == "our")
shabop_w %>% left_join(shabop_t) %>% arrange(word) %>% select(-name, -id) %>% filter(word == "the")
shabop_w %>% left_join(shabop_t) %>% arrange(word) %>% select(-name, -id) %>% filter(word == "da")
shabop_f <- shabop_w %>% left_join(shabop_t) %>% arrange(word) %>% select(-name, -id) %>% filter(word == "da")
shabop_f %>% glimpse()
shabop_f <- shabop_w %>% left_join(shabop_t) %>% arrange(word) %>% select(-name, -id)
shabop_f %>% head()
View(lexi2)
shabop_f %>% full_join(lexi2)
shabop_f %>% inner_join(lexi2)
shabop_f %>% left_join(lexi2)
lexi1
lexi2
shabop_f %>% left_join(lexi2)
shabop_t <- py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
shabop_w<- py$list %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
shabop_f <- shabop_w %>% left_join(shabop_t) %>% arrange(word) %>% select(-name, -id)
shabop_f %>% head()
shabop_f %>% left_join(lexi2)
shabop_t <- py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
shabop_w<- py$list %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
shabop_f <- shabop_w %>% left_join(shabop_t) %>% arrange(word) %>% select(-name, -id)
shabop_f %>% head()
shabop_t <- py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
py$list %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
shabop_w<-py$list %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
shabop_f <- shabop_w %>% left_join(shabop_t) %>% arrange(word) %>% select(-name, -id)
shabop_w %>% left_join(shabop_t) %>% arrange(word) %>% select(-name, -id)
shabop_w %>% left_join(shabop_t)
shabop_w %>% full_join(shabop_t)
shabop_w %>% inner_join(shabop_t)
shabop_w %>% inner_join(shabop_t)
shabop_w %>% inner_join(shabop_t, by "id")
shabob_t <- py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
py$list %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
times <- py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number())
times
py$list %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
words <- py$list %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number())
words
times
times <- py$list %>% as.data.frame() %>% select_if(is.integer) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "times") %>% mutate(id = row_number()) %>% select(-name)
times
words %>% left_join(times)
words <- py$list %>% as.data.frame() %>% select_if(is.factor) %>% pivot_longer(contains(c("X")), names_to = "name", values_to = "word") %>% mutate(id = row_number()) %>% select(-name)
words
words %>% left_join(times)
words %>% left_join(times) %>% select(-id)
full <- words %>% left_join(times) %>% select(-id)
full %>% left_join(lexi2)
lexi2 %>% mutate(value = ifelse(conn == "positive", 1, ifelse(value == "negative", -1, 0)))
lexi2 %>% mutate(value = ifelse(conn == "positive", 1, ifelse(conn == "negative", -1, 0)))
lexi2 %>% mutate(value = ifelse(conn == "positive", 1, ifelse(conn == "negative", -1, 0))) %>% select(-conn)
lexi2 %>% mutate(value = ifelse(conn == "positive", 1, ifelse(conn == "negative", -1, 0))) %>% select(-conn) %>% group_by(word)
lexi2 %>% mutate(value = ifelse(conn == "positive", 1, ifelse(conn == "negative", -1, 0))) %>% select(-conn) %>% group_by(word) %>% mutate(average = mean(value))
lexi2 %>% mutate(value = ifelse(conn == "positive", 1, ifelse(conn == "negative", -1, 0))) %>% select(-conn) %>% group_by(word) %>%  summarise_at(vars(-type), funs(mean(., na.rm=TRUE)))
lexi3 <- lexi2 %>% mutate(value = ifelse(conn == "positive", 1, ifelse(conn == "negative", -1, 0))) %>% select(-conn) %>% group_by(word) %>%  summarise_at(vars(-type), funs(mean(., na.rm=TRUE)))
full %>% left_join(lexi3)
shalom <- full %>% left_join(lexi3)
shalom
lexi3
lexi3 <- lexi2 %>% mutate(value = ifelse(conn == "positive", 1, ifelse(conn == "negative", -1, 0))) %>% select(-conn) %>% group_by(word) %>%  summarise_at(vars(-type), funs(mean(., na.rm=TRUE))) %>% mutate_if(is.double, as.integer())
lexi3 <- lexi2 %>% mutate(value = ifelse(conn == "positive", 1, ifelse(conn == "negative", -1, 0))) %>% select(-conn) %>% group_by(word) %>%  summarise_at(vars(-type), funs(mean(., na.rm=TRUE))) %>% mutate_if(is.double, as.integer)
lexi3
lexi3 <- lexi2 %>% mutate(value = ifelse(conn == "positive", 1, ifelse(conn == "negative", -1, 0))) %>% select(-conn) %>% group_by(word) %>%  summarise_at(vars(-type), funs(mean(., na.rm=TRUE))) %>% mutate_if(is.integer, as.double)
lexi3
lexi3 %>% filter(word=="true")
lexi3
shalom <- full %>% left_join(lexi3)
shalom
shalom %>% mutate(weighted_value = times*value)
shalom %>% mutate(weighted_value = times*value) %>% filter(!is.na)
shalom %>% mutate(weighted_value = times*value) %>% silect(!is.na)
shalom %>% mutate(weighted_value = times*value) %>% select(!is.na)
shalom %>% mutate(weighted_value = times*value) %>% select(is.na)
shalom %>% mutate(weighted_value = times*value) %>% filter(is.na)
shalom %>% mutate(weighted_value = times*value) %>% filter(is.na())
shalom %>% mutate(weighted_value = times*value) %>% na.omit
shalom1 <- shalom %>% mutate(weighted_value = times*value) %>% na.omit
shalom1
shalom1 %>% summarise_all(sum)
shalom1 %>% select(weighted_value) %>% summarise_all(sum)
shalom1 %>% select(weighted_value) %>% summarise(sum)
shalom1 %>% select(weighted_value) %>% summarise_all(sum)
cardio <- read_csv("~/desktop/content/blog/lexi.csv")
cardio <- read_csv("~/lexi.csv")
library(readr)
cardio <- read_csv("~/lexi.csv")
cardio <- read_csv("~/desktop/website/content/blog/lexi.csv")
library(reticulate)
library(dplyr)
library(tidyr)
library(tidyverse)
lexi1 <- lexi %>% rename(word = V1) %>% rename(conn = V2) %>% glimpse()
lexi2 <- lexi1 %>% separate(word, into = c("word", "type"), sep = "_") %>% mutate_if(is.character, as.factor) %>% glimpse()
lexi
lexi1 <- lexi %>% rename(word = V1) %>% rename(conn = V2) %>% glimpse()
lexi2 <- lexi1 %>% separate(word, into = c("word", "type"), sep = "_") %>% mutate_if(is.character, as.factor) %>% glimpse()
library(readr)
lexi <- read_csv("~/desktop/website/content/blog/lexi.csv")
library(reticulate)
library(dplyr)
library(tidyr)
library(tidyverse)
lexi
lexi1 <- lexi %>% rename(word = V1) %>% rename(conn = V2) %>% glimpse()
lexi
library(readr)
lexi <- read_csv("~/desktop/website/content/blog/lexi.csv")
library(reticulate)
library(dplyr)
library(tidyr)
library(tidyverse)
lexi
lexi
lexi <- read_csv("~/desktop/website/content/blog/lexi.csv")
View(lexi)
lexi <- read_csv("~/desktop/website/content/blog/lexi.csv")
lexi
lexi1 <- lexi %>% rename(word = Word) %>% rename(conn = connotation) %>% glimpse()
lexi2 <- lexi1 %>% separate(word, into = c("word", "type"), sep = "_") %>% mutate_if(is.character, as.factor) %>% glimpse()
blogdown::serve_site()
blogdown::serve_site()
blogdown
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
```{R, include = F, echo = F}
library(readr)
lexi <- read_csv("~/desktop/website/content/blog/lexi.csv")
library(reticulate)
library(dplyr)
library(tidyr)
library(tidyverse)
```
blogdown
blogdown::serve_site()
blogdown::serve_site()
